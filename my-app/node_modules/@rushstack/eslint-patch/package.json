{
  "name": "@rushstack/eslint-patch",
  "version": "1.1.4",
  "description": "A patch that improves how ESLint loads plugins when working in a monorepo with a reusable toolchain",
  "main": "lib/usage.js",
  "license": "MIT",
  "repository": {
    "url": "https://github.com/microsoft/rushstack.git",
    "type": "git",
    "directory": "eslint/eslint-patch"
  },
  "homepage": "https://rushstack.io",
  "keywords": [
    "eslintrc",
    "config",
    "module",
    "resolve",
    "resolver",
    "plugin",
    "relative",
    "package"
  ],
  "devDependencies": {
    "@rushstack/heft": "0.45.6",
    "@rushstack/heft-node-rig": "1.9.7",
    "@types/node": "12.20.24"
  },
  "scripts": {
    "build": "heft build --clean",
    "_phase:build": "heft build --clean"
  },
  "readme": "# @rushstack/eslint-patch\n\nA patch that improves how ESLint loads plugins when working in a monorepo with a reusable toolchain\n\n\n## What it does\n\nThis patch is a workaround for a longstanding [ESLint feature request](https://github.com/eslint/eslint/issues/3458)\nthat would allow a shared ESLint config to bring along its own plugins, rather than imposing peer dependencies\non every consumer of the config.  In a monorepo scenario, this enables your lint setup to be consolidated in a\nsingle NPM package.  Doing so greatly reduces the copy+pasting and version management for all the other projects\nthat use your standard lint rule set, but don't want to be bothered with the details.\n\nESLint provides partial solutions such as the `--resol